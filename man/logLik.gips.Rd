% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gips_class.R
\name{logLik.gips}
\alias{logLik.gips}
\title{Extract Log-Likelihood for gips class}
\usage{
\method{logLik}{gips}(object, ..., tol = .Machine$double.eps)
}
\arguments{
\item{object}{An object of class "gips"; usually a result of a \code{\link[=find_MAP]{find_MAP()}}.}

\item{...}{Further arguments passed to or from other methods.}

\item{tol}{A tolerance for \code{det(projected_cov)}.
If the det is smaller than \code{tol}, the \code{NULL} is returned.}
}
\description{
Calculates Log-Likelihood of the sample given the model.
}
\details{
This will always be the biggest for perm = "()" (provided that p <= n)
}
\section{Calculation details}{

Let \eqn{`projected\_cov` = \pi_{\Gamma}(S)}
Assume the mean was not estimated.

\eqn{L(`projected\_cov`) = \Pi_{k\in\{1,...,n\}} (\text{PDF of multivariate normal distribution with mean 0 and cov matrix `projected\_cov` at point } Z_k)}

\eqn{ln(L(`projected\_cov`)) = -1/2 * n * ( p * (1 + ln(2\pi)) + ln(det(`projected\_cov`)) )}
}

\examples{
S <- matrix(c(5.15,2.05,3.10,1.99,
              2.05,5.09,2.03,3.07,
              3.10,2.03,5.21,1.97,
              1.99,3.07,1.97,5.13), nrow = 4)
g <- gips(S, 5)
logLik(g) # -41.84805

g_map <- find_MAP(g, optimizer = "brute_force")
logLik(g_map) # -42.1625 # this will always be smaller than `logLik(g)`

g_n_too_small <- gips(S, 4)
logLik(g_n_too_small) # NULL # the likelihood does not exists; see the TODO section above
}
\seealso{
\itemize{
\item \code{\link[=find_MAP]{find_MAP()}} - Usually, the \code{logLik.gips()}
is called on the output of \code{find_MAP()}.
\item \code{\link[=AIC.gips]{AIC.gips()}} - Often, one is more interested in
an Information Criterion AIC or BIC.
\item \code{\link[=project_matrix]{project_matrix()}} - The function that can project
the known matrix of the found permutations space.
Mentioned in \strong{Calculation details} section above
}
}
