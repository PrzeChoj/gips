% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimization_algorithms.R
\name{MH}
\alias{MH}
\title{Metropolis-Hastings algorithm}
\usage{
MH(
  U,
  n_number,
  max_iter,
  start_perm = NULL,
  delta = 3,
  D_matrix = NULL,
  return_probabilities = FALSE,
  show_progress_bar = TRUE
)
}
\arguments{
\item{U}{matrix, sum of outer products of data. \code{U} = sum(t(Z) \%*\% Z), where Z is observed data.}

\item{n_number}{number of data points that \code{U} is based on.}

\item{max_iter}{number of iterations for an algorithm to perform. At least 2.}

\item{start_perm}{starting permutation for the algorithm; an element of class "cycle". When NULL, identity permutation is taken.}

\item{delta}{hyper-parameter of a Bayesian model. Has to be bigger than 2.}

\item{D_matrix}{hyper-parameter of a Bayesian model. Square matrix of the same size as \code{U}. When NULL, the identity matrix is taken.}

\item{return_probabilities}{boolean. Whether to use MH results to calculate posterior probabilities.}

\item{show_progress_bar}{boolean, indicate weather or not show the progress bar.}
}
\value{
object of class gips; list of 8 items: \code{acceptance_rate},
\code{goal_function_logvalues}, \code{points}, \code{found_point},
\code{found_point_function_logvalue}, \code{last_point},
\code{last_point_function_logvalue}, \code{iterations_performed}.
}
\description{
Uses Metropolis-Hastings algorithm to find the permutation that maximizes the likelihood of observed data.
}
\examples{
perm_size <- 6
mu <- numeric(perm_size)
# sigma is a matrix invariant under permutation (1,2,3,4,5,6)
sigma_matrix <- matrix(data = c(1.0, 0.8, 0.6, 0.4, 0.6, 0.8,
                                0.8, 1.0, 0.8, 0.6, 0.4, 0.6,
                                0.6, 0.8, 1.0, 0.8, 0.6, 0.4,
                                0.4, 0.6, 0.8, 1.0, 0.8, 0.6,
                                0.6, 0.4, 0.6, 0.8, 1.0, 0.8,
                                0.8, 0.6, 0.4, 0.6, 0.8, 1.0),
                       nrow=perm_size, byrow = TRUE)
n_number <- 13
Z <- MASS::mvrnorm(n_number, mu = mu, Sigma = sigma_matrix)
U <- (t(Z) \%*\% Z)
start_perm <- permutations::id
mh <- MH(U=U, n_number=n_number, max_iter=10, start_perm=start_perm,
         show_progress_bar=FALSE)
plot(mh)
}
