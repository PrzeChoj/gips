% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimization_algorithms.R
\name{best_growth}
\alias{best_growth}
\title{Best growth algorithm}
\usage{
best_growth(
  S,
  number_of_observations,
  max_iter = 5,
  start_perm = NULL,
  delta = 3,
  D_matrix = NULL,
  show_progress_bar = TRUE
)
}
\arguments{
\item{S}{matrix, estimated covariance matrix. When Z is observed data: \code{S = sum(t(Z) \%*\% Z)/number_of_observations}, if one know the theoretical mean is 0; # TODO(What if one have to estimate the theoretical mean with the empirical mean)}

\item{number_of_observations}{number of data points that \code{S} is based on.}

\item{max_iter}{number of iterations for an algorithm to perform. Default 5. At least 2. Can be Inf.}

\item{start_perm}{starting permutation for the algorithm; an element of class "cycle". When NULL, identity permutation is taken.}

\item{delta}{hyper-parameter of a Bayesian model. Has to be bigger than 2.}

\item{D_matrix}{hyper-parameter of a Bayesian model. Square matrix of the same size as \code{S}. When NULL, the identity matrix is taken.}

\item{show_progress_bar}{boolean, indicate weather or not show the progress bar. \code{show_progress_bar == TRUE} is not supported for \code{max_iter == Inf}.}
}
\value{
object of class gips; list of 10 items:
\code{acceptance_rate} - always \code{1/choose(dim(S)[1], 2)},
\code{log_likelihood_values} - all calculated goal function values,
\code{visited_perms} - permutations chosen in the iteration,
\code{found_perm}, \code{found_perm_log_likelihood}, \code{last_perm},
\code{last_perm_log_likelihood}, \code{iterations_performed},
\code{provided} - a list of 2 elements, namely \code{S} and \code{number_of_observations},
\code{did_converge} - indicates if the algorithm converged,
\code{optimization_algorithm_used} - always "best_growth".
}
\description{
Uses best growth algorithm to find the permutation that maximizes the likelihood of observed data.
}
\examples{
require(MASS)

perm_size <- 6
mu <- numeric(perm_size)
# sigma is a matrix invariant under permutation (1,2,3,4,5,6)
sigma_matrix <- matrix(data = c(1.0, 0.8, 0.6, 0.4, 0.6, 0.8,
                                0.8, 1.0, 0.8, 0.6, 0.4, 0.6,
                                0.6, 0.8, 1.0, 0.8, 0.6, 0.4,
                                0.4, 0.6, 0.8, 1.0, 0.8, 0.6,
                                0.6, 0.4, 0.6, 0.8, 1.0, 0.8,
                                0.8, 0.6, 0.4, 0.6, 0.8, 1.0),
                       nrow=perm_size, byrow = TRUE)
number_of_observations <- 13
Z <- MASS::mvrnorm(number_of_observations, mu = mu, Sigma = sigma_matrix)
S <- (t(Z) \%*\% Z)/number_of_observations  # the theoretical mean is 0
start_perm <- permutations::id
bg <- best_growth(S=S, number_of_observations=number_of_observations,
                  max_iter=10, start_perm=start_perm,
                  show_progress_bar=FALSE) # Algorithm did converge in 4 iterations
if (require(graphics)) {
  plot(bg, logarithmic_x=TRUE)
}
bg[["found_perm"]]
}
